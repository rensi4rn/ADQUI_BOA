CREATE OR REPLACE FUNCTION param.f_on_trig_tgestion (
						  v_operacion varchar,p_id_empresa int4,p_estado_reg varchar,p_fecha_mod timestamp,p_fecha_reg timestamp,p_id_usuario_mod int4,p_id_usuario_reg int4,p_logo varchar,p_nit varchar,p_nombre varchar)
						RETURNS text AS
						$BODY$

/*
						Function:  Para migracion de la tabla param.tgestion
						Fecha Creacion:  January 23, 2013, 11:02 am
						Autor: autogenerado (ADMINISTRADOR DEL SISTEMA )
						
						*/
						
						DECLARE
						
						BEGIN
						
						    if(v_operacion = 'INSERT') THEN
						
						          INSERT INTO 
						            PARAM.tempresa (				id_empresa,
				estado_reg,
				fecha_mod,
				fecha_reg,
				id_usuario_mod,
				id_usuario_reg,
				logo,
				nit,
				nombre)
				VALUES (
				v_id_empresa,
				v_estado_reg,
				v_fecha_mod,
				v_fecha_reg,
				v_id_usuario_mod,
				v_id_usuario_reg,
				v_logo,
				v_nit,
				v_nombre);

						       
							    ELSEIF  v_operacion = 'UPDATE' THEN
						               UPDATE 
						                  param.tgestion  
						                SET 
						                  
						                 -- id_usuario_mod = :id_usuario_mod,
						                 -- fecha_reg = :fecha_reg,
						                 -- fecha_mod = :fecha_mod,
						                 -- estado_reg = :estado_reg,
						                  gestion = v_gestion,
						                  estado = v_estado,
						                  id_moneda_base = v_id_moneda_base,
						                  id_empresa = v_id_empresa
						                 
						                WHERE 
						                  id_gestion = v_id_gestion;
						       
						       ELSEIF  v_operacion = 'DELETE' THEN
						       
						         DELETE FROM 
						              param.tgestion 
						            WHERE 
						              id_gestion = v_id_gestion;
						       
						       END IF;  
						  
						 return 'true';
						
						-- statements;
						--EXCEPTION
						--WHEN exception_name THEN
						--  statements;
						END;
						$BODY$


						LANGUAGE 'plpgsql'
						VOLATILE
						CALLED ON NULL INPUT
						SECURITY INVOKER
						COST 100;